// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id        String  @id @default(uuid())
  publicKey String  @unique
  admin     Boolean @default(false)
  status    String
  vendor    Boolean @default(false)
}

model Vendor {
  id            String   @id @default(uuid())
  createdAt     DateTime @default(now())
  email         String   @unique
  name          String
  companyName   String
  country       String?
  phone         String
  serviceType   String // "Jet Sales", "Jet Charter", etc.
  status        String   @default("PENDING") // "APPROVED", "REJECTED"\
  website       String?
  description   String?
  document      String?
  password      String?
  brandImage    String   @default("https://media.istockphoto.com/id/155439315/photo/passenger-airplane-flying-above-clouds-during-sunset.jpg?s=612x612&w=0&k=20&c=LJWadbs3B-jSGJBVy9s0f8gZMHi2NvWFXa3VJ2lFcL0=")
  walletAddress String?  @default("wallet_address")
}

model Admin {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  email     String   @unique
  password  String
  name      String
}

model Jet {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())

  // Required fields from form
  manufacturer       String
  otherManufacturer  String? // Only used when manufacturer is "Other"
  model              String
  year               Int
  serialNumber       String
  totalTimeSinceNew  Int      @map("total_time_since_new")
  totalLandings      Int      @map("total_landings")
  engineMakeModel    String   @map("engine_make_model")
  engineHours        Int      @map("engine_hours")
  avionicsSuite      String   @map("avionics_suite")
  interiorConfig     String   @map("interior_config")
  interiorImageUrls  String[] @map("interior_image_urls")
  exteriorImageUrls  String[] @map("exterior_image_urls")
  price              String
  currentLocation    String   @map("current_location")
  registrationNumber String   @unique @map("registration_number")
  contactDetails     String   @map("contact_details")

  // Aircraft Specifications
  aircraftType    String @map("aircraft_type")
  seatingCapacity Int    @map("seating_capacity")
  cabinHeight     Float  @map("cabin_height")
  cabinWidth      Float  @map("cabin_width")
  cabinLength     Float  @map("cabin_length")
  baggageCapacity Float  @map("baggage_capacity")
  numberOfEngines Int    @map("number_of_engines")
  engineType      String @map("engine_type")
  engineThrust    Float  @map("engine_thrust")

  // Certification & Compliance
  certification   String @default("FAA")
  noiseCompliance String @map("noise_compliance")

  // Operational Status
  lastInspectionDate DateTime @map("last_inspection_date")
  nextInspectionDue  DateTime @map("next_inspection_due")
  maintenanceStatus  String   @map("maintenance_status")

  // Optional fields from form
  previousOwners        Int?    @map("previous_owners")
  maintenanceProgram    String? @map("maintenance_program")
  airframeEngineStatus  String? @map("airframe_engine_status")
  refurbishmentDate     String? @map("refurbishment_date")
  wifiConnectivity      String? @map("wifi_connectivity")
  lavatoryGalleyDetails String? @map("lavatory_galley_details")
  cabinAmenities        String? @map("cabin_amenities")
  range                 Float?
  cruiseSpeed           Float?  @map("cruise_speed")
  maxAltitude           Float?  @map("max_altitude")
  runwayLength          Float?  @map("runway_length")
  emptyWeight           Float?  @map("empty_weight")
  maxTakeoffWeight      Float?  @map("max_takeoff_weight")
  deliveryAvailability  String? @map("delivery_availability")

  // Payment and vendor fields
  paymentTxSignature String  @map("payment_tx_signature")
  transactionLink    String? @map("transaction_link")
  vendorId           String  @map("vendor_id")
  views              Int     @default(0)

  // Status field
  status        String   @default("PENDING")
  sponsored     Boolean  @default(false)
  sponsoredType String   @default("NotSponsored")
  end_date      DateTime @default(now())
}

model JetForBids {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())

  // Required fields from form
  manufacturer       String
  otherManufacturer  String? // Only used when manufacturer is "Other"
  model              String
  year               Int
  serialNumber       String
  totalTimeSinceNew  Int      @map("total_time_since_new")
  totalLandings      Int      @map("total_landings")
  engineMakeModel    String   @map("engine_make_model")
  engineHours        Int      @map("engine_hours")
  avionicsSuite      String   @map("avionics_suite")
  interiorConfig     String   @map("interior_config")
  interiorImageUrls  String[] @map("interior_image_urls")
  exteriorImageUrls  String[] @map("exterior_image_urls")
  price              String
  currentLocation    String   @map("current_location")
  registrationNumber String   @unique @map("registration_number")
  contactDetails     String   @map("contact_details")

  // Optional fields from form
  previousOwners       Int?    @map("previous_owners")
  maintenanceProgram   String? @map("maintenance_program")
  airframeEngineStatus String? @map("airframe_engine_status")

  refurbishmentDate     String? @map("refurbishment_date")
  wifiConnectivity      String? @map("wifi_connectivity")
  lavatoryGalleyDetails String? @map("lavatory_galley_details")
  cabinAmenities        String? @map("cabin_amenities")
  range                 Float?
  cruiseSpeed           Float?  @map("cruise_speed")
  maxAltitude           Float?  @map("max_altitude")
  runwayLength          Float?  @map("runway_length")
  emptyWeight           Float?  @map("empty_weight")
  maxTakeoffWeight      Float?  @map("max_takeoff_weight")
  deliveryAvailability  String? @map("delivery_availability")

  vendorId String @map("vendor_id")
  views    Int    @default(0)

  // Status field
  status        String   @default("PENDING")
  sponsored     Boolean  @default(false)
  sponsoredType String   @default("NotSponsored")
  end_date      DateTime @default(now())

  // New bidding fields
  biddingEndDate      DateTime @map("bidding_end_date")
  minimumBidIncrement Float    @map("minimum_bid_increment")
  biddingStatus       String   @default("OPEN") @map("bidding_status")
  currentBid          Float?   @map("current_bid")
  bidCount            Int      @default(0) @map("bid_count")
}

model JetForCharter {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Jet Details
  jetName            String
  aircraftType       String
  manufacturer       String
  yearOfManufacture  String
  registrationNumber String

  // Performance & Capacity
  seatingCapacity    String
  cabinConfiguration String
  maximumRange       String
  cruisingSpeed      String
  baggageCapacity    String

  // Availability
  homeBase        String
  availableRoutes String
  operatingDays   String
  noticeRequired  String

  // Pricing
  pricePerHour      String
  minimumFlightTime String
  tripOption        TripOption
  additionalFees    Json
  discounts         String?

  // Amenities
  cabinFeatures   String[]
  inFlightMeals   Boolean  @default(false)
  flightAttendant Boolean  @default(false)
  petsAllowed     Boolean  @default(false)
  smokingAllowed  Boolean  @default(false)

  // Media
  exteriorImages String[]
  interiorImages String[]
  videoLink      String?

  // Extra Services
  luxuryCarService Boolean @default(false)

  // auth 
  vendorId String

  // sponsorship
  sponsored     Boolean  @default(false)
  sponsoredType String   @default("None")
  end_date      DateTime @default(now())

  // tnx
  transactionSignature String @default("")
  transactionLink      String @default("")

  //stats
  status String @default("PENDING")
  views  Int    @default(0)
}

enum TripOption {
  ROUND_TRIP
  ONE_WAY
  BOTH
}

model JetForSaleMessages {
  id              String   @id @default(uuid())
  customerName    String
  customerEmail   String
  customerCountry String
  listingId       String
  vendorId        String
  message         String
  createdAt       DateTime @default(now())
  read            Boolean  @default(false)
}

model JetForCharterMessages {
  id                String    @id @default(uuid()) @db.Uuid
  customerName      String    @db.VarChar(100)
  customerEmail     String    @db.VarChar(255)
  customerCountry   String?   @db.VarChar(100)
  departureLocation String    @db.VarChar(100)
  arrivalLocation   String    @db.VarChar(100)
  departureDate     DateTime
  returnDate        DateTime?
  passengerCount    Int
  specialRequests   String?   @db.Text
  listingId         String    @db.Uuid
  vendorId          String    @db.Uuid
  createdAt         DateTime  @default(now())
  read              Boolean   @default(false)

  @@index([listingId])
  @@index([vendorId])
}

model Wallet {
  id     String @id @default("05b9436f-6106-41fe-b677-f67946efaa4b")
  wallet String @default("4zmNTde2VviMEBrjQRqks6Vf2SUfQAy9Bd28SPFXFFxB")
}

model HelicopterForSaleListing {
  id        String   @id @default(uuid()) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Helicopter Details
  helicopterName     String @map("helicopter_name") @db.VarChar(255)
  helicopterType     String @map("helicopter_type") @db.VarChar(100)
  manufacturer       String @map("manufacturer") @db.VarChar(100)
  yearOfManufacture  Int    @map("year_of_manufacture")
  registrationNumber String @unique @map("registration_number") @db.VarChar(50)
  serialNumber       String @unique @map("serial_number") @db.VarChar(50)

  // Performance & Capacity
  seatingCapacity Int    @map("seating_capacity")
  maximumRange    Float  @map("maximum_range")
  cruisingSpeed   Float  @map("cruising_speed")
  baggageCapacity String @map("baggage_capacity") @db.VarChar(100)

  // Condition & History
  condition          String   @map("condition") @db.VarChar(100)
  totalFlightHours   Float    @map("total_flight_hours")
  maintenanceHistory String   @map("maintenance_history") @db.Text
  lastInspection     DateTime @map("last_inspection")

  // Pricing
  salePrice Float   @map("sale_price")
  discounts String? @map("discounts") @db.Text

  // Features
  avionics           String? @map("avionics") @db.Text
  emergencyEquipment Boolean @default(false) @map("emergency_equipment")
  cargoHook          Boolean @default(false) @map("cargo_hook")

  // Media
  videoLink         String?  @map("video_link") @db.VarChar(255)
  exteriorImageUrls String[] @map("exterior_image_urls")
  interiorImageUrls String[] @map("interior_image_urls")

  // Extra Equipment
  additionalEquipment String? @map("additional_equipment") @db.Text

  // Payment and Vendor
  transactionSignature String  @map("payment_tx_signature") @db.VarChar(255)
  transactionLink      String? @map("transaction_link") @db.VarChar(255)
  vendorId             String  @map("vendor_id") @db.Uuid
  views                Int     @default(0)

  // Status
  status        String   @default("PENDING") @map("status") @db.VarChar(50)
  sponsored     Boolean  @default(false) @map("sponsored")
  sponsoredType String   @default("NotSponsored") @map("sponsored_type") @db.VarChar(50)
  endDate       DateTime @default(now()) @map("end_date")

  cabinFeatures CabinFeature[] @relation("HelicopterCabinFeatures")

  @@index([vendorId])
  @@map("helicopter_listings")
}

model CabinFeature {
  id          String                     @id @default(uuid()) @db.Uuid
  createdAt   DateTime                   @default(now())
  updatedAt   DateTime                   @updatedAt
  name        String                     @unique @map("name") @db.VarChar(100)
  helicopters HelicopterForSaleListing[] @relation("HelicopterCabinFeatures")

  @@map("cabin_features")
}

model HelicopterMessage {
  id              String   @id @default(uuid()) @db.Uuid
  createdAt       DateTime @default(now())
  customerName    String   @map("customer_name") @db.VarChar(100)
  customerEmail   String   @map("customer_email") @db.VarChar(255)
  customerCountry String?  @map("customer_country") @db.VarChar(100)
  listingId       String   @map("listing_id") @db.Uuid
  vendorId        String   @map("vendor_id") @db.Uuid
  message         String   @map("message") @db.Text
  read            Boolean  @default(false) @map("read")

  @@index([listingId])
  @@index([vendorId])
  @@map("helicopter_messages")
}

model HelicopterForCharter {
  id        String   @id @default(uuid()) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Basic Information
  model         String   @db.VarChar(255)
  year          Int
  capacity      Int
  range         Float // in nautical miles
  pricePerHour  Float
  location      String   @db.VarChar(255)
  availableFrom DateTime
  availableTo   DateTime
  description   String?  @db.Text

  // Technical Details
  registrationNumber String    @unique @db.VarChar(50)
  engineType         String    @db.VarChar(50) // turbine, piston, electric, hybrid
  engineCount        Int
  maxSpeed           Float // in knots
  cruisingSpeed      Float // in knots
  fuelCapacity       Float // in gallons
  maxAltitude        Float // in feet
  flightHours        Float?
  lastOverhaul       DateTime?

  // Safety & Certification
  airworthinessCertificate String   @db.VarChar(100)
  lastMaintenanceDate      DateTime
  insuranceStatus          String   @db.VarChar(50) // active, pending, expired, not_insured
  pilotQualifications      String   @db.VarChar(100) // commercial, atp, cfi, military
  safetyFeatures           String[] // array of safety features

  // Amenities
  hasWifi                Boolean @default(false)
  hasRefreshments        Boolean @default(false)
  hasEntertainmentSystem Boolean @default(false)
  hasClimatControl       Boolean @default(false)

  // Pricing & Availability
  depositAmount      Float // percentage
  minimumHours       Float
  cancellationPolicy String  @db.VarChar(50) // flexible, moderate, strict, non_refundable
  packageDeals       String? @db.Text

  // Images and Media
  imageUrls String[]

  // Payment and Vendor Information
  transactionSignature String  @db.VarChar(255)
  transactionLink      String? @db.VarChar(255)
  vendorId             String  @db.Uuid

  // Status and Stats
  status        String   @default("PENDING") @db.VarChar(50)
  views         Int      @default(0)
  sponsored     Boolean  @default(false)
  sponsoredType String   @default("NotSponsored") @db.VarChar(50)
  endDate       DateTime @default(now()) @map("end_date")

  @@index([vendorId])
  @@map("helicopter_charters")
}

model HelicopterForCharterMessages {
  id                String    @id @default(uuid()) @db.Uuid
  customerName      String    @db.VarChar(100)
  customerEmail     String    @db.VarChar(255)
  customerCountry   String?   @db.VarChar(100)
  departureLocation String    @db.VarChar(100)
  arrivalLocation   String    @db.VarChar(100)
  departureDate     DateTime
  returnDate        DateTime?
  passengerCount    Int
  specialRequests   String?   @db.Text
  listingId         String    @db.Uuid
  vendorId          String    @db.Uuid
  createdAt         DateTime  @default(now())
  read              Boolean   @default(false)
}
